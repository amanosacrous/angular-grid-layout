import { InjectionToken } from '@angular/core';
export const GRID_ITEM_GET_RENDER_DATA_TOKEN = new InjectionToken('GRID_ITEM_GET_RENDER_DATA_TOKEN');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5kZWZpbml0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItZ3JpZC1sYXlvdXQvc3JjL2xpYi9ncmlkLmRlZmluaXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUE2RC9DLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFtRCxJQUFJLGNBQWMsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tcGFjdFR5cGUgfSBmcm9tICcuL3V0aWxzL3JlYWN0LWdyaWQtbGF5b3V0LnV0aWxzJztcclxuaW1wb3J0IHsgS3RkQ2xpZW50UmVjdCB9IGZyb20gJy4vdXRpbHMvY2xpZW50LXJlY3QnO1xyXG5pbXBvcnQgeyBLdGREaWN0aW9uYXJ5IH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBLdGRHcmlkTGF5b3V0SXRlbSB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgeDogbnVtYmVyO1xyXG4gICAgeTogbnVtYmVyO1xyXG4gICAgdzogbnVtYmVyO1xyXG4gICAgaDogbnVtYmVyO1xyXG4gICAgbWluVz86IG51bWJlcjtcclxuICAgIG1pbkg/OiBudW1iZXI7XHJcbiAgICBtYXhXPzogbnVtYmVyO1xyXG4gICAgbWF4SD86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgS3RkR3JpZENvbXBhY3RUeXBlID0gQ29tcGFjdFR5cGU7XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBLdGRHcmlkQmFja2dyb3VuZENmZyB7XHJcbiAgICBzaG93OiAnbmV2ZXInIHwgJ2Fsd2F5cycgfCAnd2hlbkRyYWdnaW5nJztcclxuICAgIGJvcmRlckNvbG9yPzogc3RyaW5nO1xyXG4gICAgZ2FwQ29sb3I/OiBzdHJpbmc7XHJcbiAgICByb3dDb2xvcj86IHN0cmluZztcclxuICAgIGNvbHVtbkNvbG9yPzogc3RyaW5nO1xyXG4gICAgYm9yZGVyV2lkdGg/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgS3RkR3JpZENmZyB7XHJcbiAgICBjb2xzOiBudW1iZXI7XHJcbiAgICByb3dIZWlnaHQ6IG51bWJlciB8ICdmaXQnOyAvLyByb3cgaGVpZ2h0IGluIHBpeGVsc1xyXG4gICAgaGVpZ2h0PzogbnVtYmVyIHwgbnVsbDtcclxuICAgIGxheW91dDogS3RkR3JpZExheW91dEl0ZW1bXTtcclxuICAgIHByZXZlbnRDb2xsaXNpb246IGJvb2xlYW47XHJcbiAgICBnYXA6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgS3RkR3JpZExheW91dCA9IEt0ZEdyaWRMYXlvdXRJdGVtW107XHJcblxyXG4vLyBUT0RPOiBSZW1vdmUgdGhpcyBpbnRlcmZhY2UuIElmIGNhbid0IHJlbW92ZSwgbW92ZSBhbmQgcmVuYW1lIHRoaXMgaW50ZXJmYWNlIGluIHRoZSBjb3JlIG1vZHVsZSBvciBzaW1pbGFyLlxyXG5leHBvcnQgaW50ZXJmYWNlIEt0ZEdyaWRJdGVtUmVjdCB7XHJcbiAgICB0b3A6IG51bWJlcjtcclxuICAgIGxlZnQ6IG51bWJlcjtcclxuICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICBoZWlnaHQ6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBLdGRHcmlkSXRlbVJlbmRlckRhdGE8VCA9IG51bWJlciB8IHN0cmluZz4ge1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIHRvcDogVDtcclxuICAgIGxlZnQ6IFQ7XHJcbiAgICB3aWR0aDogVDtcclxuICAgIGhlaWdodDogVDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFdlIGluamVjdCBhIHRva2VuIGJlY2F1c2Ugb2YgdGhlICdjaXJjdWxhciBkZXBlbmRlbmN5IGlzc3VlIHdhcm5pbmcnLiBJbiBjYXNlIHdlIGRvbid0IGhhZCB0aGlzIGlzc3VlIHdpdGggdGhlIGNpcmN1bGFyIGRlcGVuZGVuY3ksIHdlIGNvdWxkIGp1c3RcclxuICogaW1wb3J0IEt0ZEdyaWRDb21wb25lbnQgb24gS3RkR3JpZEl0ZW0gYW5kIGV4ZWN1dGUgdGhlIG5lZWRlZCBmdW5jdGlvbiB0byBnZXQgdGhlIHJlbmRlcmluZyBkYXRhLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgS3RkR3JpZEl0ZW1SZW5kZXJEYXRhVG9rZW5UeXBlID0gKGlkOiBzdHJpbmcpID0+IEt0ZEdyaWRJdGVtUmVuZGVyRGF0YTxzdHJpbmc+O1xyXG5leHBvcnQgY29uc3QgR1JJRF9JVEVNX0dFVF9SRU5ERVJfREFUQV9UT0tFTjogSW5qZWN0aW9uVG9rZW48S3RkR3JpZEl0ZW1SZW5kZXJEYXRhVG9rZW5UeXBlPiA9IG5ldyBJbmplY3Rpb25Ub2tlbignR1JJRF9JVEVNX0dFVF9SRU5ERVJfREFUQV9UT0tFTicpO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBLdGREcmFnZ2luZ0RhdGEge1xyXG4gICAgcG9pbnRlckRvd25FdmVudDogTW91c2VFdmVudCB8IFRvdWNoRXZlbnQ7XHJcbiAgICBwb2ludGVyRHJhZ0V2ZW50OiBNb3VzZUV2ZW50IHwgVG91Y2hFdmVudDtcclxuICAgIGdyaWRFbGVtQ2xpZW50UmVjdDogS3RkQ2xpZW50UmVjdDtcclxuICAgIGRyYWdFbGVtQ2xpZW50UmVjdDogS3RkQ2xpZW50UmVjdDtcclxuICAgIHNjcm9sbERpZmZlcmVuY2U6IHsgdG9wOiBudW1iZXIsIGxlZnQ6IG51bWJlciB9O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEt0ZERyYWdnaW5nTXVsdGlwbGVEYXRhIHtcclxuICAgIHBvaW50ZXJEb3duRXZlbnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50O1xyXG4gICAgcG9pbnRlckRyYWdFdmVudDogTW91c2VFdmVudCB8IFRvdWNoRXZlbnQ7XHJcbiAgICBncmlkRWxlbUNsaWVudFJlY3Q6IEt0ZENsaWVudFJlY3Q7XHJcbiAgICBkcmFnRWxlbWVudHNDbGllbnRSZWN0OiBLdGREaWN0aW9uYXJ5PEt0ZENsaWVudFJlY3Q+O1xyXG4gICAgc2Nyb2xsRGlmZmVyZW5jZTogeyB0b3A6IG51bWJlciwgbGVmdDogbnVtYmVyIH07XHJcbn1cclxuIl19